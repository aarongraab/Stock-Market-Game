<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sell Stocks</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .container {
            width: 100%;
            max-width: 600px;
            margin: auto;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
        }
        .form-group select, .form-group input, .form-group button {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
        }
        .form-group button {
            background-color: #3498db; /* Blue for consistency with Buy page, modify as needed */
            color: white;
            cursor: pointer;
        }
        .form-group button:hover {
            background-color: #2980b9; /* Darker blue on hover */
        }
        .profit-display {
            margin-top: 20px; /* Consistent spacing */
        }
        .total-sale {
            margin-top: 20px;
        }
        .error-message, .success-message {
            margin-bottom: 15px;
            display: none; /* Hide by default, shown via JavaScript */
            padding: 10px;
            border-radius: 5px;
        }
        .error-message {
            color: #e74c3c; /* Red */
            background-color: #fce4e4; /* Light red background */
        }
        .success-message {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Sell Stocks</h1>

        <div class="form-group">
            <label for="stockToSell">Select Stock:</label>
            <select id="stockToSell" name="stockToSell">
                <!-- Options will be populated dynamically -->
            </select>
        </div>

        <div class="form-group">
            <label for="quantityToSell">Quantity to Sell:</label>
            <input type="number" id="quantityToSell" name="quantityToSell" min="1" required>
        </div>

        <div class="total-cost">Total Sale: <span id="totalCost">$0.00</span></div>

        <div class="form-group">
            <button type="button" id="checkPriceButton">Calculate Sale</button>
        </div>

        <div class="form-group">
            <button type="button" id="sellStock">Sell Stocks</button>
        </div>

        <div id="errorMessage" class="error-message"></div>
        <div id="successMessage" class="success-message"></div>
        
    </div>

    <script>
        let currentStockPrice = 0;
        const errorMessage = document.getElementById('errorMessage'); // Define error message element
        const successMessage = document.getElementById('successMessage'); // Define success message element
    
        async function fetchAndDisplayOwnedStocks(username) {
            try {
                const response = await fetch(`/get-stocks-owned/${username}`);
                if (!response.ok) throw new Error('Failed to fetch stocks owned');
    
                const stocksOwned = await response.json();
                populateStockDropdown(stocksOwned);
            } catch (error) {
                console.error('Error fetching stocks owned:', error);
                // Optionally update the UI to inform the user
            }
        }
    
        function populateStockDropdown(stocksOwned) {
            const dropdown = document.getElementById('stockToSell');
            dropdown.innerHTML = ''; // Clear existing options
    
            const defaultOption = document.createElement('option');
            defaultOption.textContent = 'Select a stock';
            defaultOption.value = '';
            defaultOption.disabled = true;
            defaultOption.selected = true;
            dropdown.appendChild(defaultOption);
    
            // Cycle through owned stocks for the dropdown
            stocksOwned.forEach(stock => {
                const option = document.createElement('option');
                option.value = stock.stockTicker;
                option.textContent = `${stock.stockTicker} (${stock.quantity} Stocks Owned)`;
                dropdown.appendChild(option);
            });
        } 
    
        document.getElementById('quantityToSell').addEventListener('input', calculateTotalCost);
    
        document.getElementById('checkPriceButton').addEventListener('click', async function() {
            const stockTicker = document.getElementById('stockToSell').value;
    
            if (stockTicker) {
                try {
                    const response = await fetch(`/api/check-price?ticker=${stockTicker}`);
                    const data = await response.json();
    
                    if (data.price) {
                        currentStockPrice = data.price; // Update the current stock price with the fetched price
                        calculateTotalCost(); // Recalculate total cost with the new stock price
                    } else {
                        alert('Failed to retrieve price. Please try again. API only handles 5 API calls per minute');
                    }
                } catch (error) {
                    console.error('Error fetching stock price:', error);
                    alert('An error occurred while fetching the stock price.');
                }
            } else {
                alert('Please select a stock.');
            }
        });
    
        document.getElementById('sellStock').addEventListener('click', async function() {
            const stockTicker = document.getElementById('stockToSell').value;
            const quantityToSell = document.getElementById('quantityToSell').value;
            const totalCostElement = document.getElementById('totalCost');
            const totalCost = parseFloat(totalCostElement.innerText.replace('$', ''));
            const username = '<%= username %>'; // Make sure this is correctly replaced by your server-side template
    
            try {
                const response = await fetch('/sell-stock', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, stockTicker, quantityToSell, totalCost })
                });
    
                const isSuccessful = await response.json();
                if (!isSuccessful.success) {
                    errorMessage.textContent = isSuccessful.message;
                    errorMessage.style.display = 'block';
                    successMessage.style.display = 'none';
                } else {
                    successMessage.textContent = isSuccessful.message;
                    successMessage.style.display = 'block';
                    errorMessage.style.display = 'none';
                }
                document.getElementById('stockToSell').value = '';
                document.getElementById('quantityToSell').value = '';
                window.location.reload();
            } catch (error) {
                console.error('Error during transaction:', error);
                errorMessage.textContent = 'An error occurred during the transaction.';
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
            }
        });
    
        function calculateTotalCost() {
            const quantity = parseFloat(document.getElementById('quantityToSell').value);
            const totalCost = currentStockPrice * quantity;
            document.getElementById('totalCost').innerText = `$${totalCost.toFixed(2)}`;
        }
    
        document.addEventListener('DOMContentLoaded', function() {
            const username = '<%= username %>'; // Make sure this is correctly replaced by your server-side template
            fetchAndDisplayOwnedStocks(username);
        });
    </script>
    